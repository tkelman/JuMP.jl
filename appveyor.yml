environment:
  matrix:
# Releases
  - JULIAVERSION: "stable/win32"
  - JULIAVERSION: "stable/win64"
# Nightlies
#  - JULIAVERSION: "download/win32"
#  - JULIAVERSION: "download/win64"

branches:
  only:
    - master
    - av-test

install:
  - ps: if ($env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/tkelman/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
        Add-AppveyorCompilationMessage "There are newer queued builds for this pull request, failing early." `
        -Category Error; exit }
# Download most recent Julia Windows binary
  - ps: (new-object net.webclient).DownloadFile($("http://status.julialang.org/"+$env:JULIAVERSION), "C:\projects\julia-binary.exe")
# Run installer silently, output to C:\projects\julia
  - C:\projects\julia-binary.exe /S /D=C:\projects\julia

build_script:
# Need to convert from shallow to complete for Pkg.clone to work
#  - git fetch --unshallow
  - C:\projects\julia\bin\julia-debug -e "versioninfo(); Pkg.init(); Pkg.add(\"WinRPM\"); Pkg.clone(pwd(), \"JuMP\");"

test_script:
  - C:\projects\julia\bin\julia-debug -e "Pkg.test(\"JuMP\")"
